swagger: "2.0"
info:
  description: "API detailed description "
  version: "1.0.0"
  title: "NodeRest API"
basePath: "/v1"
tags:
  - name: "ProductName"
    description: "Product Name."
  - name: "LOB"
    description: "Line of business name."
  - name: "backendName"
    description: "Backend Service name for internal API only. External "
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
paths:
  /readyStatus:
    $ref: ./common/readyStatus.yaml
  /liveStatus:
    $ref: ./common/liveStatus.yaml
  /:
    get:
      description: "get array of person details"
      operationId: "getPersons"
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Persons'
          examples:
            application/json: |-
              [
              {
                "id": 1,
                "name": "abc"
              }, {
                "id": 2,
                "name": "xyz"
              }
              ]
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/JsonError'
          examples:
            application/json: |-
              {
                "code": 400,
                "message": "some error"
              }
      x-swagger-router-controller: "Person"
  /{personId}:
    get:
      description: "get person details by id"
      operationId: "getPersonById"
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: "personId"
        in: "path"
        description: "ID of person to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Person'
          examples:
            application/json: |-
              {
                "id": 1,
                "name": "abc"
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/JsonError'
          examples:
            application/json: |-
              {
                "code": 400,
                "message": "some error"
              }
      x-swagger-router-controller: "Person"
definitions:
  Persons:
    type: array
    items:
      $ref: '#/definitions/Person'
  Person:
    type: object
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: string

  JsonError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        format: string
